services:
  init-fs:
    image: busybox:1.36
    # Create host directories with the correct owner (app UID)
    command: sh -c "install -d -o 10001 -g 10001 /host/static /host/media"
    volumes:
      - /var/www/pierreandrieu/static:/host/static
      - /var/www/pierreandrieu/media:/host/media
    restart: "no"
  db:
    image: postgres:16
    env_file: .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true

  web:
    build: .
    env_file: .env.prod
    environment:
      ENVIRONMENT: production
      DJANGO_SETTINGS_MODULE: sitepro.settings.prod
    depends_on:
      init-fs:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    volumes:
      - /var/www/pierreandrieu/static:/app/staticfiles
      - /var/www/pierreandrieu/media:/app/media
    ports:
      - "127.0.0.1:8000:8000"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: [ "CMD-SHELL", "python - <<'PY'\nimport socket,sys\ns=socket.socket(); s.settimeout(2)\ntry:\n s.connect(('localhost',8000)); s.close(); sys.exit(0)\nexcept Exception:\n sys.exit(1)\nPY" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    read_only: true               # rend /app en lecture seule
    tmpfs:
      - /tmp                      # Python/Django peuvent Ã©crire dans /tmp
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: "4.0"      # optionnel
          memory: 2g

#  nginx:
#    image: nginx:1.27-alpine
#    ports: [ "80:80", "443:443" ]
#    volumes:
#      - ./nginx/conf.d:/etc/nginx/conf.d:ro
#      - /etc/letsencrypt:/etc/letsencrypt:ro 
#      - static:/var/www/static:ro
#      - media:/var/www/media:ro
#    depends_on:
#      web:
#        condition: service_healthy
#    restart: unless-stopped
#    logging:
#      driver: json-file
#      options:
#        max-size: "10m"
#        max-file: "5"
#    read_only: true
#    tmpfs:
#      - /var/run
#      - /var/cache/nginx
#    security_opt:
#      - no-new-privileges:true
#    cap_drop:
#      - ALL

volumes:
  postgres_data:
#  static:
#  media:
#  certs:
